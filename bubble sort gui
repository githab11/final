import javax.swing.*;
import java.awt.*;
import java.util.Random;

public class mainthing extends JPanel {
    private int[] array; // Array of values to sort
    private final int arraySize = 500; // Number of elements to visualize
    private boolean sorting = false; // Indicates whether sorting is happening

    public mainthing() {
        array = new int[arraySize]; // Initialize array with the correct size
    }

    // Generate an array with random values
    private void generateRandomArray() {
        Random random = new Random();
        int panelHeight = getHeight(); // Get the panel height dynamically

        // Ensure we have a valid height
        if (panelHeight <= 0) {
            panelHeight = 500; // Default height if the panel isn't ready yet
        }

        for (int i = 0; i < arraySize; i++) {
            array[i] = random.nextInt(panelHeight); // Random height for visualization
        }
    }

    // Bubble sort with real-time visualization
    public void bubbleSortWithVisualization() {
        sorting = true;
        for (int i = 0; i < array.length - 1; i++) {
            for (int j = 0; j < array.length - 1 - i; j++) {
                if (array[j] > array[j + 1]) {
                    // Swap values
                    int temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp;
                }

                // Repaint the panel to show the current state of the array
                repaint();

                
                try {
                    Thread.sleep(1); // Adjust delay to control animation speed
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
        sorting = false;
    }

    // Paint the array as vertical lines
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);

        // Clear the background
        g.setColor(Color.RED);
        g.fillRect(0, 0, getWidth(), getHeight());

        // Draw the array values
        g.setColor(Color.BLACK);
        for (int i = 0; i < array.length; i++) {
            g.drawLine(i, getHeight(), i, getHeight() - array[i]);
        }
    }

    public static void main(String[] args) {
        // Set up the GUI frame
        JFrame frame = new JFrame("Pixel Sorting Visualization");
        mainthing panel = new mainthing();

        frame.add(panel);
        frame.setSize(500, 500); // Set the window size
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);

        // Generate the array after the panel is displayed
        SwingUtilities.invokeLater(() -> {
            panel.generateRandomArray(); // Generate the array
            new Thread(panel::bubbleSortWithVisualization).start(); // Start sorting
        });
    }
}
